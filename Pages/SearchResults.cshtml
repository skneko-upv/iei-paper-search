@page
@model IEIPaperSearch.Pages.SearchResultsModel

@{
    ViewData["Title"] = "Resultados de búsqueda";
}

<h1>@ViewData["Title"]</h1>

<span>Encontrados @Model.Results.Count resultados</span> 
<table class="table">
    <thead>
        <tr>
            <th>
                Título
            </th>
            <th>
                Año
            </th>
            <th>
                Autores
            </th>
            <th>
                Página inicio
            </th>
            <th>
                Página fin
            </th>
            <th>
                Revista/Editorial/Conferencia
            </th>
            <th style="width: 15%"></th>
        </tr>
    </thead>
    <tbody>
         @foreach (var item in Model.Results)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @string.Join(", ", item.Authors)
            </td>
            <td>
                @(item is Models.Article ? (Html.DisplayFor(modelItem => (item as Models.Article)!.StartPage)) : "")
                @(item is Models.InProceedings ? (Html.DisplayFor(modelItem => (item as Models.InProceedings)!.StartPage)) : "")
            </td>
            <td>
                @(item is Models.Article ? (Html.DisplayFor(modelItem => (item as Models.Article)!.EndPage)) : "")
                @(item is Models.InProceedings ? (Html.DisplayFor(modelItem => (item as Models.InProceedings)!.EndPage)) : "")
            </td>
            <td>
                @(GetIssueAndJournalSummary(item))
                @(item is Models.Book ? (Html.DisplayFor(modelItem => (item as Models.Book)!.Publisher)) : "")
                @(GetConferenceSummary(item))
            </td>
            <td>
                <a href="@item.URL">Leer en línea</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@functions{
    string GetIssueAndJournalSummary(Models.Submission article)
    {
        if (article is Models.Article)
        {
            var issue = (article as Models.Article)!.PublishedIn;
            if (issue is null)
            {
                return "";
            }

            return $"{issue.Journal.Name} {issue.Number ?? ""} {issue.Volume ?? ""} {issue.Month ?? ""}";
        }
        return "";
    }

    string GetConferenceSummary(Models.Submission inProceedings)
    {
        if (inProceedings is Models.InProceedings)
        {
            var item = (inProceedings as Models.InProceedings)!;

            return $"{item.Conference} {item.Edition ?? ""}";
        }
        return "";
    }
}
